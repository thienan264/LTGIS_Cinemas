// layerSetup.js
import { map } from './mapCore.js';
import { zoom } from './mapConfig.js';

// H√†m x·ª≠ l√Ω ch·ªçn phim (ƒë·∫∑t ·ªü ƒë√¢y ƒë·ªÉ d·ªÖ truy c·∫≠p feature)
function handleMovieSelect(event, featureId) {
    const selectedIndex = event.target.value;
    const detailDiv = document.getElementById(`movie-detail-${featureId}`);

    // C√°ch truy c·∫≠p feature g·ªëc l√† th√¥ng qua 'this' c·ªßa bindPopup ho·∫∑c t√¨m layer
    // T√¨m layer ch·ª©a popup ƒëang m·ªü (c√°ch n√†y kh√¥ng ·ªïn ƒë·ªãnh l·∫Øm)
    let currentFeature = null;
    map.eachLayer(layer => {
        if (layer instanceof L.Marker && layer.getPopup() && layer.getPopup().isOpen()) {
            if (layer.feature && layer.feature.id == featureId) { // Gi·∫£ s·ª≠ feature c√≥ id tr√πng
                currentFeature = layer.feature;
            }
        } else if (layer instanceof L.GeoJSON) { // N·∫øu popup m·ªü t·ª´ layer group
            layer.eachLayer(marker => {
                if (marker.feature && marker.feature.id == featureId && marker.getPopup() && marker.getPopup().isOpen()) {
                    currentFeature = marker.feature;
                }
            });
        }
    });

    // N·∫øu kh√¥ng t√¨m ƒë∆∞·ª£c, th·ª≠ truy c·∫≠p qua bi·∫øn global (n·∫øu c√≥) - kh√¥ng khuy·∫øn kh√≠ch
    // currentFeature = window.lastClickedFeature; // C·∫ßn g√°n bi·∫øn n√†y ·ªü ƒë√¢u ƒë√≥

    if (!detailDiv) { // B·ªè ki·ªÉm tra feature v√¨ kh√≥ l·∫•y ch√≠nh x√°c ·ªü ƒë√¢y
        console.error("Could not find details div for", featureId);
        return;
    }

    // L·∫•y d·ªØ li·ªáu phim (c·∫ßn c√≥ c√°ch l·∫•y feature ƒë√°ng tin c·∫≠y)
    // Gi·∫£ s·ª≠ currentFeature ƒë√£ l·∫•y ƒë∆∞·ª£c ·ªü tr√™n
    const lichChieu = currentFeature?.properties?.lich_chieu || [];


    if (selectedIndex === "" || !currentFeature) {
        detailDiv.innerHTML = ""; // Clear details
    } else {
        const movie = lichChieu[parseInt(selectedIndex, 10)];
        if (movie) {
            detailDiv.innerHTML = `
                <b>Phim:</b> ${movie.ten_phim}<br>
                <b>Gi·ªù chi·∫øu:</b> ${movie.gio_chieu}<br>
                <b>Th·ªÉ lo·∫°i:</b> ${movie.the_loai}<br>
                
                
            `;
        } else {
            detailDiv.innerHTML = "<em>Kh√¥ng c√≥ th√¥ng tin chi ti·∫øt.</em>";
        }
    }
}
// G√°n v√†o window ƒë·ªÉ onclick trong HTML string g·ªçi ƒë∆∞·ª£c
window.handleMovieSelect = handleMovieSelect;

// H√†m clickZoom g·ªëc
export function clickZoom(e) {
    map.setView(e.target.getLatLng(), zoom);
}

// Khai b√°o bi·∫øn geojsonOpts g·ªëc (d√πng var ƒë·ªÉ gi·ªëng scope g·ªëc)
// v√† g√°n v√†o window ƒë·ªÉ file kh√°c d√πng ƒë∆∞·ª£c (c√°ch gi·ªØ code g·ªëc)
var geojsonOpts = {
    pointToLayer: function (feature, latlng) {
        // G√°n feature.id n·∫øu ch∆∞a c√≥ ƒë·ªÉ handleMovieSelect c√≥ th·ªÉ d√πng
        if (!feature.id) feature.id = L.Util.stamp(feature);

        return L.marker(latlng, {
            icon: L.divIcon({
                className: "cinema-icon",
                html: "<span class='emoji'>üé•</span>",
                iconSize: [40, 40],
                iconAnchor: [20, 20],
                popupAnchor: [0, -25],
            }),
        }).bindPopup(function (layer) { // D√πng function th∆∞·ªùng ƒë·ªÉ c√≥ 'this'
            // G√°n feature v√†o layer ƒë·ªÉ d·ªÖ truy c·∫≠p sau n√†y n·∫øu c·∫ßn
            layer.feature = feature;
            // C√≥ th·ªÉ g√°n v√†o bi·∫øn global t·∫°m th·ªùi khi popup m·ªü (kh√¥ng khuy·∫øn kh√≠ch)
            // window.lastClickedFeature = feature;


            let lichChieu = feature.properties.lich_chieu || [];
            let dropdownHtml = "<em>Ch∆∞a c√≥ l·ªãch chi·∫øu</em>";
            if (lichChieu.length > 0) {
                dropdownHtml = `
            <label for="movie-select-${feature.id}"><b>Danh s√°ch phim:</b></label><br>
            <select id="movie-select-${feature.id}" onchange="handleMovieSelect(event, '${feature.id}')">
              <option value="">-- Phim ƒëang chi·∫øu --</option>
              ${lichChieu.map((item, index) =>
                    `<option value="${index}">
                    ${item.ten_phim} (${item.gio_chieu})
                 </option>`).join("")}
            </select>
            <div id="movie-detail-${feature.id}" style="margin-top: 10px; font-size: 0.9em;"></div>
          `;
            }

            // G·ªçi h√†m routeToDestination t·ª´ global scope (window)
            return `
          üé• <b>R·∫°p chi·∫øu phim</b><br>
          <b>${feature.properties.name}</b><br>
          <em>${feature.properties.address}</em><br>
          <p>${feature.properties.description || ''}</p>
          ${dropdownHtml}
          <br><br>
          <button onclick="window.routeToDestination([${latlng.lat}, ${latlng.lng}])">Ch·ªâ ƒë∆∞·ªùng</button>
        `;
        }).on("click", clickZoom); // Gi·ªØ nguy√™n on click g·ªçi clickZoom
    },
};

// G√°n v√†o window ƒë·ªÉ c√°c file kh√°c (nearestCinema) c√≥ th·ªÉ truy c·∫≠p
window.geojsonOpts = geojsonOpts;

console.log("Layer setup (geojsonOpts) done.");